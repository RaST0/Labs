// Laba1.cpp: определяет точку входа для консольного приложения.
//

#include "stdafx.h"
#include <iostream>
#include <bitset>
// В ковычках пишутся имена файлов, которые в первую очередь следует искать компилятору, начиная с папки самого проекта
// В угловых скобках файлы ищутся только в специальном перечне системных папок


// Процессор не умеет вычитать, вычитание выполняется через сложение.
// Отрицательное число записывается через так называемый обратный и дополнительный коды.
// Обратный(инверсией),дополнительный(+1)

// /* */ - это комментарии языка C++. Можно писать все , что угодно, этот текст игнорируется компилятором


// 1) Фунцкция (Что такое "Функция" далее в курсе)


// Проект включает файлы исходного кода с расширением *.c/*.cpp и файлов заголовков *.h/*.hpp (header)
// При обработке кода компилятор помещает содержимое файла заголовка вместо его include


// 2)Функция с именем main традиционно является ТОЧКОЙ ВХОДА (entry point) в приложении 
// Функция  - это фрагмент кода, имеющий собственный индификатор - имя функции
// Системный загрузчик приложений передает управление именно на фунцкию main во всех приложениях
int main()
{
	/*Выполняемый код пишется здесь, от начало функции до return */

	int a; // Объявление челочисленной переменной со знаком
	a = -10; // проинициализировали ( присвоили начальное значение)
	std::cout << "a_dec = \n " << a << '\n'; // 1)Вывод в консоль 2) Цепочки практически неограниченно длины 3) Цепочки разнородных данных
	std::cout << "a_bin = " << std::bitset<32>(a) << std::endl;

	// std::endl Фактически кодирует символ переноса строки "\n"

	a *= -1; // Эквивалентно  записи a = a * -1
	std::cout << "a_bin = " << std::bitset<32>(a) << std::endl;

	std::cout << "sizeof(int) = " << sizeof(int) << std::endl;
	std::cout << "sizeof(char) = " << sizeof(char) << std::endl;
	std::cout << "sizeof(wchar_t) = " << sizeof(wchar_t) << std::endl;
	std::cout << "sizeof(bool) = " << sizeof(bool) << std::endl;
	std::cout << "sizeof(float) = " << sizeof(float) << std::endl;
	std::cout << "sizeof(double) = " << sizeof(double) << std::endl;
	std::cout << "sizeof(shot) = " << sizeof(short) << std::endl;
	std::cout << "sizeof(long) = " << sizeof(long) << std::endl;
	std::cout << "sizeof(signed) = " << sizeof(signed) << std::endl;
	std::cout << "sizeof(unsigned) = " << sizeof(unsigned) << std::endl;
	bool b = true;
	std::cout << "bool b = " << std::bitset<8>(b) << std::endl;
	b = false;
	std::cout << "bool b = " << std::bitset<8>(b) << std::endl;

	short s = 1000;
	std::cout << "short s = " << std::bitset<16>(s) << std::endl;
	s *= -1;
	std::cout << "short s = " << std::bitset<16>(s) << std::endl;
	 

	unsigned int c = 10;
	std::cout << "unsigned int c = " << std::bitset<32>(c) << std::endl;
	c *= -1;
	std::cout << "unsigned int c = " << std::bitset<32>(c) << std::endl;
	std::cout << "unsigned int c = " << c << std::endl;
	c = 0b11111111111111111111111111111111; // Двоичная запись числа - через 0b
	std::cout << "max unsigned int = " << c << std::endl; // max = 4294967295

	a = 0b01111111111111111111111111111111;
	std::cout << "max int = " << a << std::endl; // max int = 2147483647
	a = 0b10000000000000000000000000000000;
	std::cout << "max int = " << a << std::endl; // max int = -2147483647




	getchar(); // 1) Функция 2) Ожидание ввода любой клавишей 1 символа

	return 0; // 1) Точка завершения функции 2) Завершение функции main является точкой завершения работы приложения

			  // Всё, что будет записанно здесь, скомпилируется, но никогда не будет выполняться.
}